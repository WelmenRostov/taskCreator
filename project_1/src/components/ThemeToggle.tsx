import { useState, useEffect } from 'react';

const ThemeToggleWithBox = () => {
    const [isDarkMode, setIsDarkMode] = useState(false);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    useEffect(() => {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            setIsDarkMode(savedTheme === 'dark');
            if (savedTheme === 'dark') {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }
        }
    }, []);

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    const toggleTheme = () => {
        setIsDarkMode(!isDarkMode);
        if (!isDarkMode) {
            document.documentElement.classList.add('dark');
            localStorage.setItem('theme', 'dark');
        } else {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('theme', 'light');
        }
    };

    return (
        <div className="p-4">
            {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */}
            <button
                onClick={toggleTheme}
                className="mb-4 p-2 bg-gray-300 dark:bg-gray-700 rounded-md"
            >
                {isDarkMode ? 'üåô –¢–µ–º–Ω–∞—è —Ç–µ–º–∞' : 'üåû –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞'}
            </button>

            {/* div, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã */}
            <div
                className='w-32 h-32 rounded-lg transition-colors duration-300 bg-gray-800 dark:bg-yellow-300'
            ></div>
        </div>
    );
};

export default ThemeToggleWithBox;
